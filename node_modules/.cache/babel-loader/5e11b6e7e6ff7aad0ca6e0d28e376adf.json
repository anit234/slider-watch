{"ast":null,"code":"var _jsxFileName = \"/Users/anitadhikari/Documents/watch/src/components/Home.js\";\nimport React from \"react\";\nimport ControlSwitches from \"./ControlSwitches\";\nimport ControlButtons from \"./ControlButtons\";\nimport Display from \"./Display\";\nimport { Row } from \"react-grid-system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeTime = (action, offset) => {\n      let newValue = this.state.timeValue;\n\n      if (this.state.power) {\n        switch (action) {\n          case \"up\":\n            newValue = newValue + offset;\n            break;\n\n          case \"down\":\n            newValue = newValue - offset;\n            break;\n\n          case \"slider\":\n            newValue = Number(offset);\n            break;\n        }\n\n        this.setState({\n          timeValue: newValue\n        });\n      }\n    };\n\n    this.changeUnit = checked => {\n      if (this.state.power) {\n        const value = checked ? \"min\" : \"hrs\";\n        this.setState({\n          timeUnit: value\n        });\n      }\n    };\n\n    this.togglePower = () => {\n      this.setState({\n        power: !this.state.power\n      });\n    };\n\n    this.state = {\n      timeValue: 100,\n      timeUnit: \"min\",\n      power: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watchBody\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Display, {\n          power: this.state.power,\n          timeUnit: this.state.timeUnit,\n          timeValue: this.state.timeValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ControlButtons, {\n          power: this.state.power,\n          togglePower: this.togglePower,\n          changeTime: this.changeTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          marginTop: \"10px\",\n          marginBottom: '-15px'\n        },\n        children: /*#__PURE__*/_jsxDEV(ControlSwitches, {\n          timeValue: this.state.timeValue,\n          timeUnit: this.state.timeUnit,\n          changeTime: this.changeTime,\n          changeUnit: this.changeUnit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/anitadhikari/Documents/watch/src/components/Home.js"],"names":["React","ControlSwitches","ControlButtons","Display","Row","Home","Component","constructor","props","changeTime","action","offset","newValue","state","timeValue","power","Number","setState","changeUnit","checked","value","timeUnit","togglePower","render","marginTop","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,GAAT,QAAoB,mBAApB;;AAEA,eAAe,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAE9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,UATmB,GASN,CAACC,MAAD,EAASC,MAAT,KAAoB;AAC7B,UAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,SAA1B;;AACA,UAAI,KAAKD,KAAL,CAAWE,KAAf,EAAsB;AAClB,gBAAQL,MAAR;AACI,eAAK,IAAL;AACIE,YAAAA,QAAQ,GAAGA,QAAQ,GAAGD,MAAtB;AACA;;AACJ,eAAK,MAAL;AACIC,YAAAA,QAAQ,GAAGA,QAAQ,GAAGD,MAAtB;AACA;;AACJ,eAAK,QAAL;AACIC,YAAAA,QAAQ,GAAGI,MAAM,CAACL,MAAD,CAAjB;AACA;AATR;;AAWA,aAAKM,QAAL,CAAc;AAACH,UAAAA,SAAS,EAAEF;AAAZ,SAAd;AACH;AACJ,KAzBkB;;AAAA,SA2BnBM,UA3BmB,GA2BLC,OAAD,IAAa;AACtB,UAAI,KAAKN,KAAL,CAAWE,KAAf,EAAsB;AAClB,cAAMK,KAAK,GAAGD,OAAO,GAAG,KAAH,GAAW,KAAhC;AACA,aAAKF,QAAL,CAAc;AAACI,UAAAA,QAAQ,EAAED;AAAX,SAAd;AACH;AACJ,KAhCkB;;AAAA,SAkCnBE,WAlCmB,GAkCL,MAAM;AAChB,WAAKL,QAAL,CAAc;AAACF,QAAAA,KAAK,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAApB,OAAd;AACH,KApCkB;;AAEf,SAAKF,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,GADF;AAETO,MAAAA,QAAQ,EAAE,KAFD;AAGTN,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AA+BDQ,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA,8BACI,QAAC,GAAD;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,KAAK,EAAE,KAAKV,KAAL,CAAWE,KAA3B;AAAkC,UAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWQ,QAAvD;AAAiE,UAAA,SAAS,EAAE,KAAKR,KAAL,CAAWC;AAAvF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAAlC;AAAyC,UAAA,WAAW,EAAE,KAAKO,WAA3D;AAAwE,UAAA,UAAU,EAAE,KAAKb;AAAzF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEe,UAAAA,SAAS,EAAE,MAAb;AAAqBC,UAAAA,YAAY,EAAE;AAAnC,SAAZ;AAAA,+BACI,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWC,SAAvC;AAAkD,UAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWQ,QAAvE;AAAiF,UAAA,UAAU,EAAE,KAAKZ,UAAlG;AAA8G,UAAA,UAAU,EAAE,KAAKS;AAA/H;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AArD6C","sourcesContent":["import React from \"react\";\nimport ControlSwitches from \"./ControlSwitches\";\nimport ControlButtons from \"./ControlButtons\";\nimport Display from \"./Display\";\nimport { Row } from \"react-grid-system\";\n\nexport default class Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeValue: 100,\n            timeUnit: \"min\",\n            power: true\n        };\n    }\n\n    changeTime = (action, offset) => {\n        let newValue = this.state.timeValue;\n        if (this.state.power) {\n            switch (action) {\n                case \"up\":\n                    newValue = newValue + offset;\n                    break;\n                case \"down\":\n                    newValue = newValue - offset;\n                    break;\n                case \"slider\":\n                    newValue = Number(offset);\n                    break;\n            }\n            this.setState({timeValue: newValue});\n        }\n    }\n\n    changeUnit = (checked) => {\n        if (this.state.power) {\n            const value = checked ? \"min\" : \"hrs\";\n            this.setState({timeUnit: value});\n        }\n    }\n\n    togglePower = () => {\n        this.setState({power: !this.state.power});\n    }\n\n    render() {\n\n        return (\n            <div className={\"watchBody\"}>\n                <Row>\n                    <Display power={this.state.power} timeUnit={this.state.timeUnit} timeValue={this.state.timeValue}/>\n                    <ControlButtons power={this.state.power} togglePower={this.togglePower} changeTime={this.changeTime}/>\n                </Row>\n                <Row style={{ marginTop: \"10px\", marginBottom: '-15px'}}>\n                    <ControlSwitches timeValue={this.state.timeValue} timeUnit={this.state.timeUnit} changeTime={this.changeTime} changeUnit={this.changeUnit}/>\n                </Row>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}